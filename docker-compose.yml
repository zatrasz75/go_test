version: '3.8'
services:
  app_go:
    env_file:
      - .env
    container_name: app_go
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3335:3334"
    depends_on:
      - postgres
      - redis
      - nats
      - server-ch
  postgres:
    restart: always
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: clean-copy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespw
#    volumes:
#      - ./initScriptPostgres:/docker-entrypoint-initScriptPostgres.d
    ports:
      - '5432:5432'
  redis:
    image: redis:6.2
    restart: always
    ports:
      - '6379:6379'
#    volumes:
#      - ./data:/data
  nats:
    image: nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 --user ruser --pass T0pS3cr3t"
    networks:
      - nats
  nats-1:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@reponats:6222 --user ruser --pass T0pS3cr3t"
    depends_on:
      - nats
    networks:
      - nats
  nats-2:
    image: nats
    command: "--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@reponats:6222 --user ruser --pass T0pS3cr3t"
    depends_on:
      - nats
    networks:
      - nats
  server-ch:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"

    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    environment:
      - CLICKHOUSE_DB=clean_copy
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASSWORD=rootroot
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
#    volumes:
#      - ./initScriptClickhouse:/docker-entrypoint-initScriptClickhouse.d

networks:
  nats:
    driver: bridge

# docker compose up -d